Welcome to diggr

This is a little toy project to allow me to experiment with various technologies.
This is a simplistic Digg clone, build to leverage ActiveMQ, Solr, and Redis.

ActiveMQ is used to scale the process of fetching new link contents and processing them. It also manages indexing the content once the link is saved. This would allow these to scale horizontally, simply by adding new link message processers.

Redis is used to maintain the vote counts, and the sets of users who have already voted on a link.

Solr is used for full text indexing of the link title, contents, and tags. 

In the future I plan on adding a scoring algorithm for the links to determine ordering, right now it just order by creation date.

Score = (P-1) / (T+2)^G

where,
P = points of an item (and -1 is to negate submitters vote)
T = time since submission (in hours)
G = Gravity, defaults to 1.8

Some configuration notes:
  I have Solr setup to use multicore, so you would have the following in your solr.home directory
      <solr persistent="true" sharedLib="lib">
       <cores adminPath="/admin/cores">
        <core name="sunspot" instanceDir="sunspot" />
       </cores>
      </solr>

  Also, to setup Sunspot, your config/sunspot.yml would look like this
    development:
      solr:
        hostname: localhost
        port: 8080
        path: /solr/sunspot
        log_level: DEBUG
